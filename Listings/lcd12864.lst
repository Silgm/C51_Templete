C51 COMPILER V9.54   LCD12864                                                              01/16/2018 16:23:17 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE lcd12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -lcd12864.lst) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          #include "lcd12864.h"
   2          
   3          
   4          
   5          #define  CMD_CLEAR                  0x01 //清屏
   6          #define  CMD_RESET_DDRAM            0x02 //DDRAM地址归位
   7          #define  CMD_LEFT_MOVE              0x04 //游标左移
   8          #define  CMD_RIGHT_MOVE             0x06 //游标右移
   9          #define  CMD_ALL_LEFT_MOVE          0x05 //画面整体左移
  10          #define  CMD_ALL_RIGHT_MOVE         0x07 //画面整体右移
  11          #define  CMD_ENABLE_WITHOUT_CUR     0x0c //开显示，无游标，不反白
  12          #define  CMD_ENABLE_WITH_CUR        0x0f //开显示，开游标，不反白
  13          #define  CMD_DISPLAY_LEFT_MOVE      0x10 //显示游标左移
  14          #define  CMD_DISPLAY_RIGHT_MOVE     0x14 //显示游标右移
  15          #define  CMD_SET_FUNCTION1          0x30 //基本指令集动作
  16          #define  CMD_SET_CGRAM              0x40 //设定CGRAM地址
  17          #define  CMD_SET_DDRAM              0x80 //设定DDRAM地址
  18          #define  CMD_SET_FUNCTION2          0x34 //扩充指令集动作
  19          #define  CMD_FUNCTION2_REV_WRITE    0x04 //反白第一行(扩充指令集)
  20          #define  CMD_FUNCTION2_SET_GDRAM    0x80 //设定GDRAM地址(扩充指令集)
  21          #define  CMD_FUNCTION2_ON_GRAPHIC   0x36 //开绘图显示(扩充指令集)
  22          #define  CMD_FUNCTION2_OFF_GRAPHIC  0x34 //关绘图显示(扩充指令集)
  23          
  24          static void delay(long ms)
  25          {
  26   1              int i = 0;
  27   1              for (;ms > 0 ;ms--)
  28   1                      for (; i < 120; i++);
  29   1      }
  30          
  31          static void lcd12864_WriteCmd(Lcd12864 *this, uint8_t cmd)
  32          {
  33   1              digitalWrite(this->CS, HIGH);
  34   1              shiftOut(this->dataPin, this->clockPin, MSBFIRST, 0xf8);
  35   1              shiftOut(this->dataPin, this->clockPin, MSBFIRST, 0xf0&cmd);
  36   1              shiftOut(this->dataPin, this->clockPin, MSBFIRST, 0xf0&(cmd<<4));
  37   1              digitalWrite(this->CS, LOW);
  38   1      }
  39          
  40          static void lcd12864_WriteDat(Lcd12864 *this, uint8_t dat)
  41          {
  42   1              digitalWrite(this->CS, HIGH);
  43   1              shiftOut(this->dataPin, this->clockPin, MSBFIRST, 0xfa);
  44   1              shiftOut(this->dataPin, this->clockPin, MSBFIRST, 0xf0&dat);
  45   1              shiftOut(this->dataPin, this->clockPin, MSBFIRST, 0xf0&(dat<<4));
  46   1              digitalWrite(this->CS, LOW);
  47   1      }
  48          
  49          
  50          
  51          void lcd12864_Create(Lcd12864 *this, _Pin CS, _Pin dataPin, _Pin clockPin)
  52          {
  53   1              this->CS = CS;
  54   1              this->dataPin = dataPin;
C51 COMPILER V9.54   LCD12864                                                              01/16/2018 16:23:17 PAGE 2   

  55   1              this->clockPin = clockPin;
  56   1      }
  57          
  58          void lcd12864_Begin(Lcd12864 *this, uint8_t lcdmod)
  59          {
  60   1              if (lcdmod == LCD_MOD_CHAR){
  61   2                      this->MOD = lcdmod;
  62   2                      lcd12864_WriteCmd(this, CMD_SET_FUNCTION1);
  63   2                      lcd12864_WriteCmd(this, CMD_ENABLE_WITHOUT_CUR);
  64   2                      lcd12864_WriteCmd(this, CMD_CLEAR);
  65   2                      delay(5);
  66   2                      lcd12864_WriteCmd(this, CMD_RESET_DDRAM);
  67   2                      lcd12864_WriteCmd(this, CMD_RIGHT_MOVE);
  68   2              }
  69   1      }
  70          
  71          void lcd12864_SetCursor(Lcd12864 *this, uint8_t x, uint8_t y)
  72          {
  73   1              if (this->MOD == LCD_MOD_CHAR){
  74   2                      switch (x){
  75   3                      case 0:
  76   3                              lcd12864_WriteCmd(this, 0x80 + y);
  77   3                              break;
  78   3                      case 1:
  79   3                              lcd12864_WriteCmd(this, 0x90 + y);
  80   3                              break;
  81   3                      case 2:
  82   3                              lcd12864_WriteCmd(this, 0x88 + y);
  83   3                              break;
  84   3                      case 3:
  85   3                              lcd12864_WriteCmd(this, 0x98 + y);
  86   3                              break;
  87   3                      default:
  88   3                              break;
  89   3                      }
  90   2              }
  91   1      }
  92          
  93          void lcd12864_Print(Lcd12864 *this, const char *szString)
  94          {
  95   1              char *pStr = szString;
  96   1              while (*pStr)
  97   1                      lcd12864_WriteDat(this, *pStr++);
  98   1      }
  99                  
 100          
 101          
 102          
 103          
 104          
 105          
 106          
 107          
 108          
 109          
 110          
 111          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    533    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   LCD12864                                                              01/16/2018 16:23:17 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
